// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CrawlJob {
  id            String   @id @default(uuid())
  url           String
  email         String
  status        String   @default("pending") // pending, verified, processing, completed, failed
  verified      Boolean  @default(false)
  verifyToken   String?
  verifyAttempts Int     @default(0)
  cancelled     Boolean  @default(false)
  homepage      String?
  robotsTxt     String?
  sitemapXml    String?
  sampleSitemap Json?
  crawlStats    Json?    // crawl statistics and completion info
  error         String?  // main crawl error message if job fails
  errorDetails  Json?    // detailed error information with stack trace
  failedStep    String?  // which step failed (e.g. "robots.txt", "sitemap", "crawl_pages")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  pages         CrawlPage[]
  
  @@map("crawl_jobs")
}

model CrawlPage {
  id          String   @id @default(uuid())
  crawlJobId  String   @map("crawl_job_id")
  url         String
  title       String?
  html        String?
  statusCode  Int?
  redirected  Boolean  @default(false)
  finalUrl    String?  // final URL after redirects
  level       Int?     // sitemap level/depth
  pathname    String?  // URL pathname
  segments    Json?    // URL segments array
  priority    Float?   // sitemap priority
  changefreq  String?  // sitemap changefreq
  lastmod     String?  // sitemap lastmod
  error       String?  // crawl error message if page fails
  crawledAt   DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  job         CrawlJob @relation(fields: [crawlJobId], references: [id], onDelete: Cascade)
  
  @@map("crawl_pages")
}
